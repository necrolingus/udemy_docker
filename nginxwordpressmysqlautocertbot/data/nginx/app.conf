limit_req_zone $binary_remote_addr zone=iplimitmany:20m rate=100r/s;
limit_req_zone $binary_remote_addr zone=iplimitsmall:20m rate=10r/s;

fastcgi_cache_path /etc/nginx/cache levels=1:2 keys_zone=FASTCGICACHE:100m inactive=10m;
fastcgi_cache_key "$scheme$request_method$host$request_uri";
#fastcgi_cache_use_stale error timeout invalid_header http_500;
fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

#default block to prevent connections to IP on port 80
server {
    listen      80 default_server;
    listen      [::]:80 default_server;
    server_name "";
    return      444; #CONNECTION CLOSED WITHOUT RESPONSE

    # Disable access logs
    access_log off;
}

# Default server block to handle IP address requests on port 443 and block them except when it is cloudflare
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name _;

    # Disable access logs
    access_log off;

    # Allow Cloudflare IPs
    allow 173.245.48.0/20;
    allow 103.21.244.0/22;
    allow 103.22.200.0/22;
    allow 103.31.4.0/22;
    allow 141.101.64.0/18;
    allow 108.162.192.0/18;
    allow 190.93.240.0/20;
    allow 188.114.96.0/20;
    allow 197.234.240.0/22;
    allow 198.41.128.0/17;
    allow 162.158.0.0/15;
    allow 104.16.0.0/13;
    allow 104.24.0.0/14;
    allow 172.64.0.0/13;
    allow 131.0.72.0/22;

    allow 2400:cb00::/32;
    allow 2606:4700::/32;
    allow 2803:f800::/32;
    allow 2405:b500::/32;
    allow 2405:8100::/32;
    allow 2a06:98c0::/29;
    allow 2c0f:f248::/32;

    # Deny all other IPs
    deny all;

    # Return 444 for denied IPs
    return 444; # CONNECTION CLOSED WITHOUT RESPONSE

    #Important otherwise Cloudflare will not load
    ssl_certificate /etc/letsencrypt/live/techstuff.leighonline.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/techstuff.leighonline.net/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    listen 80;
    server_name techstuff.leighonline.net;
    server_tokens off;

        # Disable access logs
    access_log off;

    #Allow LetsEncrypt and return 404 if the file looked for is not found
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    #For all other locations redirect to HTTPS
    location / {
        limit_req zone=iplimitmany;
        return 301 https://$host$request_uri;
    }
}
server {
    #if ($http_user_agent ~* ((slack?)|(whatsapp?)) ){
    #    return 403;
    #}
    set $skip_cache 0;

    # POST requests and urls with a query string should always go to PHP
    if ($request_method = POST) {
        set $skip_cache 1;
    }

    if ($query_string != "") {
        set $skip_cache 1;
    }

    # Don't cache uris containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $skip_cache 1;
    }

    # Don't use the cache for logged in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_no_cache|wordpress_logged_in") {
        set $skip_cache 1;
    }

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name techstuff.leighonline.net;
    server_tokens off;

        # Disable access logs
    access_log off;

    ssl_certificate /etc/letsencrypt/live/techstuff.leighonline.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/techstuff.leighonline.net/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    client_body_timeout 12;
    client_header_timeout 12;
    reset_timedout_connection on;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    index index.php index.html index.htm;
    root /var/www/html;

    location / {
        limit_req zone=iplimitmany;
        try_files $uri $uri/ /index.php$is_args$args;
    }


    #if matched then stop searching regex matches
    location ^~ /(assets/js|assets/css) {
        add_header Cache-Control "public";
        expires max;
        log_not_found off;
        access_log off;
    }



    location ~ \.php$ {

        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        fastcgi_cache FASTCGICACHE;
        fastcgi_cache_valid 5m;
        add_header X-FastCGI-Cache $upstream_cache_status;

        limit_req zone=iplimitmany;
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_pass wordpress:9000;
    }

    location ~ /\.ht {
        deny all;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
        allow all;
    }
}

